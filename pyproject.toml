[project]
name = "py-aozora-data"
version = "2.1.0"
description = "Aozora-bunko data model"
authors = [{ name = "Ken Sato", email = "ksato9700@gmail.com" }]
license = "MIT"
readme = "README.md"

dependencies = [
    "python-dotenv>=1.1",
    "pydantic>=2.11",
    "lxml>=5.4",
    "requests>=2.32",
    "SQLAlchemy>=2.0",
    "cssselect>=1.3",
]

[project.urls]
Homepage = "https://github.com/your-username/py-aozora-data" # Replace with your project's URL
"Bug Tracker" = "https://github.com/your-username/py-aozora-data/issues" # Replace with your project's issue tracker

[project.scripts]
# If you have any scripts, define them here, e.g.:
# my-script = "aozora_data.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.3",
    "requests-mock>=1.12",
    "pre-commit>=4.2",
    "mypy>=1.15",
    "ruff>=0.11.10",
]

[tool.ruff]
# Enable a selection of linter rules
# B: Bugbear
# E: pycodestyle errors
# F: Pyflakes
# I: isort (formatting and sorting imports)
# N: pep8-naming
# W: pycodestyle warnings
# D: pydocstyle (for docstring conventions - optional, remove if not using)
# UP: pyupgrade (for suggesting modern Python syntax)
# ANN: flake8-annotations (for type hints - optional)
# C4: flake8-comprehensions
# SIM: flake8-simplify
# RUF: Ruff-specific rules
lint.select = ["E", "F", "W", "I", "C", "N", "D", "B", "UP", "ANN", "C4", "SIM", "RUF"]
lint.ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in public method
    "D211", # Checks for docstrings on class definitions that are preceded by a blank line.
    "D213", # Checks for docstring summary lines that are not positioned on the second physical line of the docstring.
    "ANN201", # Missing type annotation for function
]
line-length = 102 # Matches Black's default line length for compatibility

[tool.ruff.lint.per-file-ignores]
# Example: Ignore specific rules in a test file
"tests/*" = ["D"] # Ignore docstring rules in test files

[tool.ruff.lint.isort]
# Ruff's built-in isort functionality can be configured here
known-first-party = ["aozora_data"] # Add your project's top-level package name

[tool.uv]
# You typically don't need a specific tool.uv table for dependencies
# as they are now handled by the [project] table for regular and
# [project.optional-dependencies] for dev.
# However, you might use this for uv-specific configurations if they arise in the future.

[build-system]
requires = ["setuptools>=61.0"] # setuptools is a common build backend with uv
build-backend = "setuptools.build_meta"